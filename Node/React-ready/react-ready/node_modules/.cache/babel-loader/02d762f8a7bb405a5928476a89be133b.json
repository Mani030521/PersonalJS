{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M1047144\\\\Desktop\\\\Node\\\\React-ready\\\\react-ready\\\\src\\\\containers\\\\Customer\\\\Customer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CustomerList from './CustomerList';\nimport { base } from '../../hocs';\nimport { customerActions } from '../../actions';\nimport Fab from '../../components/Fab';\n\nclass Customer extends React.Component {\n  async componentDidMount() {\n    try {\n      this.props.showLoading();\n      await this.props.getCustomers();\n    } catch (error) {\n      this.props.showSnackBar(error.message);\n    } finally {\n      this.props.hideLoading();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Fab, {\n      handleClick: () => {\n        this.props.history.push('/customer/add');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(CustomerList, {\n      rows: this.props.customers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customers: state.customer.list\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCustomers: async () => {\n      await dispatch(customerActions.getCustomers());\n    }\n  };\n};\n\nCustomer.propTypes = {\n  customers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getCustomers: PropTypes.func.isRequired,\n  showSnackBar: PropTypes.func.isRequired,\n  showLoading: PropTypes.func.isRequired,\n  hideLoading: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default base(connect(mapStateToProps, mapDispatchToProps)(Customer));","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/containers/Customer/Customer.js"],"names":["React","connect","PropTypes","CustomerList","base","customerActions","Fab","Customer","Component","componentDidMount","props","showLoading","getCustomers","error","showSnackBar","message","hideLoading","render","history","push","customers","mapStateToProps","state","customer","list","mapDispatchToProps","dispatch","propTypes","arrayOf","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AACA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACnC,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,WAAKC,KAAL,CAAWC,WAAX;AACA,YAAM,KAAKD,KAAL,CAAWE,YAAX,EAAN;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,WAAKH,KAAL,CAAWI,YAAX,CAAwBD,KAAK,CAACE,OAA9B;AACH,KALD,SAKU;AACN,WAAKL,KAAL,CAAWM,WAAX;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,0CACI,oBAAC,GAAD;AACI,MAAA,WAAW,EAAE,MAAM;AACf,aAAKP,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB;AACH,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWU,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;;AAvBkC;;AA0BvC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,SAAS,EAAEE,KAAK,CAACC,QAAN,CAAeC;AADI,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHd,IAAAA,YAAY,EAAE,YAAY;AACtB,YAAMc,QAAQ,CAACrB,eAAe,CAACO,YAAhB,EAAD,CAAd;AACH;AAHE,GAAP;AAKH,CAND;;AAQAL,QAAQ,CAACoB,SAAT,GAAqB;AACjBP,EAAAA,SAAS,EAAElB,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAAC2B,MAA5B,EAAoCC,UAD9B;AAEjBlB,EAAAA,YAAY,EAAEV,SAAS,CAAC6B,IAAV,CAAeD,UAFZ;AAGjBhB,EAAAA,YAAY,EAAEZ,SAAS,CAAC6B,IAAV,CAAeD,UAHZ;AAIjBnB,EAAAA,WAAW,EAAET,SAAS,CAAC6B,IAAV,CAAeD,UAJX;AAKjBd,EAAAA,WAAW,EAAEd,SAAS,CAAC6B,IAAV,CAAeD,UALX;AAMjBZ,EAAAA,OAAO,EAAEhB,SAAS,CAAC2B,MAAV,CAAiBC;AANT,CAArB;AAQA,eAAe1B,IAAI,CAACH,OAAO,CAACoB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,QAA7C,CAAD,CAAnB","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport CustomerList from './CustomerList';\r\nimport { base } from '../../hocs';\r\nimport { customerActions } from '../../actions';\r\nimport Fab from '../../components/Fab';\r\nclass Customer extends React.Component {\r\n    async componentDidMount() {\r\n        try {\r\n            this.props.showLoading();\r\n            await this.props.getCustomers();\r\n        } catch (error) {\r\n            this.props.showSnackBar(error.message);\r\n        } finally {\r\n            this.props.hideLoading();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Fab\r\n                    handleClick={() => {\r\n                        this.props.history.push('/customer/add');\r\n                    }}\r\n                />\r\n                <CustomerList rows={this.props.customers} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    customers: state.customer.list,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCustomers: async () => {\r\n            await dispatch(customerActions.getCustomers());\r\n        },\r\n    };\r\n};\r\n\r\nCustomer.propTypes = {\r\n    customers: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    getCustomers: PropTypes.func.isRequired,\r\n    showSnackBar: PropTypes.func.isRequired,\r\n    showLoading: PropTypes.func.isRequired,\r\n    hideLoading: PropTypes.func.isRequired,\r\n    history: PropTypes.object.isRequired,\r\n};\r\nexport default base(connect(mapStateToProps, mapDispatchToProps)(Customer));\r\n"]},"metadata":{},"sourceType":"module"}