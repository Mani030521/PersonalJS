{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M1047144\\\\Desktop\\\\Node\\\\React-ready\\\\react-ready\\\\src\\\\containers\\\\Dashboard\\\\Dashboard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DashboardWidgets from './DashboardWidgets';\nimport { dashboardActions } from '../../actions';\nimport { base } from '../../hocs';\n\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    this.props.getOrders().then(() => {\n      console.log('comingggggg');\n      this.props.hideLoading();\n    }).catch(error => {\n      this.props.showSnackBar(error.message);\n      this.props.hideLoading();\n    });\n  }\n\n  render() {\n    return React.createElement(DashboardWidgets, {\n      orders: this.props.orders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  orders: state.dashboard.orders\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getOrders: () => {\n      return new Promise((res, rej) => {\n        console.log(dispatch(dashboardActions.getOrders()));\n        dispatch(dashboardActions.getOrders());\n        res();\n      });\n    }\n  };\n};\n\nDashboard.propTypes = {\n  orders: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getOrders: PropTypes.func.isRequired,\n  showSnackBar: PropTypes.func.isRequired,\n  showLoading: PropTypes.func.isRequired,\n  hideLoading: PropTypes.func.isRequired\n};\nexport default base(connect(mapStateToProps, mapDispatchToProps)(Dashboard));","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/containers/Dashboard/Dashboard.js"],"names":["React","connect","PropTypes","DashboardWidgets","dashboardActions","base","Dashboard","Component","componentDidMount","props","getOrders","then","console","log","hideLoading","catch","error","showSnackBar","message","render","orders","mapStateToProps","state","dashboard","mapDispatchToProps","dispatch","Promise","res","rej","propTypes","arrayOf","object","isRequired","func","showLoading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,IAAT,QAAqB,YAArB;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AACpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CACKC,SADL,GAEKC,IAFL,CAEU,MAAM;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,WAAKJ,KAAL,CAAWK,WAAX;AACH,KALL,EAMKC,KANL,CAMWC,KAAK,IAAI;AACZ,WAAKP,KAAL,CAAWQ,YAAX,CAAwBD,KAAK,CAACE,OAA9B;AACA,WAAKT,KAAL,CAAWK,WAAX;AACH,KATL;AAUH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WAAO,oBAAC,gBAAD;AAAkB,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWW,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAhBmC;;AAmBxC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,MAAM,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AADM,CAAL,CAA7B;;AAIA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,SAAS,EAAE,MAAM;AACb,aAAO,IAAIgB,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7BhB,QAAAA,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAACrB,gBAAgB,CAACM,SAAjB,EAAD,CAApB;AACAe,QAAAA,QAAQ,CAACrB,gBAAgB,CAACM,SAAjB,EAAD,CAAR;AACAiB,QAAAA,GAAG;AACN,OAJM,CAAP;AAKH;AAPE,GAAP;AASH,CAVD;;AAYArB,SAAS,CAACuB,SAAV,GAAsB;AAClBT,EAAAA,MAAM,EAAElB,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,MAA5B,EAAoCC,UAD1B;AAElBtB,EAAAA,SAAS,EAAER,SAAS,CAAC+B,IAAV,CAAeD,UAFR;AAGlBf,EAAAA,YAAY,EAAEf,SAAS,CAAC+B,IAAV,CAAeD,UAHX;AAIlBE,EAAAA,WAAW,EAAEhC,SAAS,CAAC+B,IAAV,CAAeD,UAJV;AAKlBlB,EAAAA,WAAW,EAAEZ,SAAS,CAAC+B,IAAV,CAAeD;AALV,CAAtB;AAOA,eAAe3B,IAAI,CAACJ,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,SAA7C,CAAD,CAAnB","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DashboardWidgets from './DashboardWidgets';\r\nimport { dashboardActions } from '../../actions';\r\nimport { base } from '../../hocs';\r\n\r\nclass Dashboard extends React.Component {\r\n    componentDidMount() {\r\n        this.props\r\n            .getOrders()\r\n            .then(() => {\r\n                console.log('comingggggg')\r\n                this.props.hideLoading();\r\n            })\r\n            .catch(error => {\r\n                this.props.showSnackBar(error.message);\r\n                this.props.hideLoading();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <DashboardWidgets orders={this.props.orders} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    orders: state.dashboard.orders,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getOrders: () => {\r\n            return new Promise((res, rej) => {\r\n                console.log(dispatch(dashboardActions.getOrders()))\r\n                dispatch(dashboardActions.getOrders());\r\n                res();\r\n            });\r\n        },\r\n    };\r\n};\r\n\r\nDashboard.propTypes = {\r\n    orders: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    getOrders: PropTypes.func.isRequired,\r\n    showSnackBar: PropTypes.func.isRequired,\r\n    showLoading: PropTypes.func.isRequired,\r\n    hideLoading: PropTypes.func.isRequired,\r\n};\r\nexport default base(connect(mapStateToProps, mapDispatchToProps)(Dashboard));\r\n"]},"metadata":{},"sourceType":"module"}