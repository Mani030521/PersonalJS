{"ast":null,"code":"import * as types from './actionTypes';\nimport { httpClient } from '../utils';\nexport function getOrders() {\n  return dispatch => {\n    dispatch(getOrdersPending());\n    httpClient.get('5df64b99340000223de5a57a').then(response => {\n      return new Promise((res, rej) => {\n        console.log(response);\n\n        if (response) {\n          res('sucess');\n          dispatch(getOrdersSuccess(response.result));\n        } else {\n          rej();\n        }\n      });\n    });\n  };\n}\n\nfunction getOrdersPending() {\n  return {\n    type: types.GET_DASHBOARD_ORDERS_REQUEST\n  };\n}\n\nfunction getOrdersSuccess(orders) {\n  return {\n    type: types.GET_DASHBOARD_ORDERS_SUCCESS,\n    payload: orders\n  };\n}","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/actions/dashboardActions.js"],"names":["types","httpClient","getOrders","dispatch","getOrdersPending","get","then","response","Promise","res","rej","console","log","getOrdersSuccess","result","type","GET_DASHBOARD_ORDERS_REQUEST","orders","GET_DASHBOARD_ORDERS_SUCCESS","payload"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,UAA3B;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AACAH,IAAAA,UAAU,CAACI,GAAX,CAAe,0BAAf,EAA2CC,IAA3C,CAAgDC,QAAQ,IAAI;AACxD,aAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,YAAGA,QAAH,EAAY;AACRE,UAAAA,GAAG,CAAC,QAAD,CAAH;AACAN,UAAAA,QAAQ,CAACU,gBAAgB,CAACN,QAAQ,CAACO,MAAV,CAAjB,CAAR;AACH,SAHD,MAGK;AACDJ,UAAAA,GAAG;AACN;AACJ,OARM,CAAP;AASH,KAVD;AAWH,GAbD;AAcH;;AACD,SAASN,gBAAT,GAA4B;AACxB,SAAO;AACHW,IAAAA,IAAI,EAAEf,KAAK,CAACgB;AADT,GAAP;AAGH;;AAED,SAASH,gBAAT,CAA0BI,MAA1B,EAAkC;AAC9B,SAAO;AACHF,IAAAA,IAAI,EAAEf,KAAK,CAACkB,4BADT;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH","sourcesContent":["import * as types from './actionTypes';\r\nimport { httpClient } from '../utils';\r\n\r\nexport function getOrders() {\r\n    return dispatch => {\r\n        dispatch(getOrdersPending());\r\n        httpClient.get('5df64b99340000223de5a57a').then(response => {\r\n            return new Promise((res, rej) => {\r\n                console.log(response)\r\n                if(response){\r\n                    res('sucess');\r\n                    dispatch(getOrdersSuccess(response.result));\r\n                }else{\r\n                    rej();\r\n                }\r\n            })\r\n        });\r\n    };\r\n}\r\nfunction getOrdersPending() {\r\n    return {\r\n        type: types.GET_DASHBOARD_ORDERS_REQUEST,\r\n    };\r\n}\r\n\r\nfunction getOrdersSuccess(orders) {\r\n    return {\r\n        type: types.GET_DASHBOARD_ORDERS_SUCCESS,\r\n        payload: orders,\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}