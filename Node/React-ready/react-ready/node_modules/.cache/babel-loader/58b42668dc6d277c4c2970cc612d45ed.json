{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M1047144\\\\Desktop\\\\Node\\\\React-ready\\\\react-ready\\\\src\\\\containers\\\\App\\\\App.js\";\nimport React from 'react';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppRouter from '../../routes';\nimport LoadingIndicator from '../../components/LoadingIndicator';\nimport SnackBar from '../../components/SnackBar';\nimport { commonActions } from '../../actions';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.handleSnackBarClose = this.handleSnackBarClose.bind(this);\n  }\n\n  handleSnackBarClose() {\n    this.props.hideSnackBar();\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(SnackBar, {\n      openSnackBar: this.props.openSnackBar,\n      message: this.props.snackBarMessage,\n      handleSnackBarClose: this.handleSnackBarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(LoadingIndicator, {\n      isLoading: this.props.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(AppRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.common.isLoading,\n  openSnackBar: state.common.openSnackBar,\n  snackBarMessage: state.common.snackBarMessage\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    hideSnackBar: () => {\n      dispatch(commonActions.hideSnackBar());\n    }\n  };\n};\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  openSnackBar: PropTypes.bool.isRequired,\n  hideSnackBar: PropTypes.func.isRequired,\n  snackBarMessage: PropTypes.string\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/containers/App/App.js"],"names":["React","PropTypes","connect","AppRouter","LoadingIndicator","SnackBar","commonActions","App","Component","componentDidMount","handleSnackBarClose","bind","props","hideSnackBar","render","console","log","openSnackBar","snackBarMessage","isLoading","mapStateToProps","state","common","mapDispatchToProps","dispatch","propTypes","bool","isRequired","func","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,aAAT,QAA8B,eAA9B;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAC9BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AAEDD,EAAAA,mBAAmB,GAAG;AAClB,SAAKE,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,YAAY,EAAE,KAAKA,KAAL,CAAWK,YAD7B;AAEI,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,eAFxB;AAGI,MAAA,mBAAmB,EAAE,KAAKR,mBAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,gBAAD;AAAkB,MAAA,SAAS,EAAE,KAAKE,KAAL,CAAWO,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAWH;;AAtB6B;;AAyBlC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,SAAS,EAAEE,KAAK,CAACC,MAAN,CAAaH,SADM;AAE9BF,EAAAA,YAAY,EAAEI,KAAK,CAACC,MAAN,CAAaL,YAFG;AAG9BC,EAAAA,eAAe,EAAEG,KAAK,CAACC,MAAN,CAAaJ;AAHA,CAAL,CAA7B;;AAMA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHX,IAAAA,YAAY,EAAE,MAAM;AAChBW,MAAAA,QAAQ,CAAClB,aAAa,CAACO,YAAd,EAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQAN,GAAG,CAACkB,SAAJ,GAAgB;AACZN,EAAAA,SAAS,EAAElB,SAAS,CAACyB,IAAV,CAAeC,UADd;AAEZV,EAAAA,YAAY,EAAEhB,SAAS,CAACyB,IAAV,CAAeC,UAFjB;AAGZd,EAAAA,YAAY,EAAEZ,SAAS,CAAC2B,IAAV,CAAeD,UAHjB;AAIZT,EAAAA,eAAe,EAAEjB,SAAS,CAAC4B;AAJf,CAAhB;AAMA,eAAe3B,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,GAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport AppRouter from '../../routes';\r\nimport LoadingIndicator from '../../components/LoadingIndicator';\r\nimport SnackBar from '../../components/SnackBar';\r\nimport { commonActions } from '../../actions';\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.handleSnackBarClose = this.handleSnackBarClose.bind(this);\r\n    }\r\n\r\n    handleSnackBarClose() {\r\n        this.props.hideSnackBar();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div>\r\n                <SnackBar\r\n                    openSnackBar={this.props.openSnackBar}\r\n                    message={this.props.snackBarMessage}\r\n                    handleSnackBarClose={this.handleSnackBarClose}\r\n                />\r\n                <LoadingIndicator isLoading={this.props.isLoading} />\r\n                <AppRouter />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoading: state.common.isLoading,\r\n    openSnackBar: state.common.openSnackBar,\r\n    snackBarMessage: state.common.snackBarMessage,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        hideSnackBar: () => {\r\n            dispatch(commonActions.hideSnackBar());\r\n        },\r\n    };\r\n};\r\n\r\nApp.propTypes = {\r\n    isLoading: PropTypes.bool.isRequired,\r\n    openSnackBar: PropTypes.bool.isRequired,\r\n    hideSnackBar: PropTypes.func.isRequired,\r\n    snackBarMessage: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}