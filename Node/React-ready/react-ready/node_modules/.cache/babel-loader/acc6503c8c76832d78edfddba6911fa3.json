{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M1047144\\\\Desktop\\\\Node\\\\React-ready\\\\react-ready\\\\src\\\\containers\\\\App\\\\App.js\";\nimport React from 'react';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport AppRouter from '../../routes';\nimport LoadingIndicator from '../../components/LoadingIndicator';\nimport SnackBar from '../../components/SnackBar';\nimport { commonActions } from '../../actions';\n\nclass App extends React.Component {\n  componentDidMount() {\n    console.log('component mounted');\n    this.handleSnackBarClose = this.handleSnackBarClose.bind(this);\n  }\n\n  handleSnackBarClose() {// this.props.hideSnackBar();\n  }\n\n  render() {\n    console.log(this.props.showSnackBar('show'));\n    console.log(this.props.hideSnackBar('hide'));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(SnackBar, {\n      openSnackBar: this.props.openSnackBar,\n      message: this.props.snackBarMessage,\n      handleSnackBarClose: this.handleSnackBarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(LoadingIndicator, {\n      isLoading: this.props.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(AppRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isLoading: state.common.isLoading,\n    openSnackBar: state.common.openSnackBar,\n    snackBarMessage: state.common.snackBarMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const showSnackBar = commonActions.showSnackBar,\n        hideSnackBar = commonActions.hideSnackBar;\n  return bindActionCreators({\n    showSnackBar,\n    hideSnackBar\n  }, dispatch);\n};\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  openSnackBar: PropTypes.bool.isRequired,\n  snackBarMessage: PropTypes.string\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/containers/App/App.js"],"names":["React","PropTypes","connect","bindActionCreators","AppRouter","LoadingIndicator","SnackBar","commonActions","App","Component","componentDidMount","console","log","handleSnackBarClose","bind","render","props","showSnackBar","hideSnackBar","openSnackBar","snackBarMessage","isLoading","mapStateToProps","state","common","mapDispatchToProps","dispatch","propTypes","bool","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,aAAT,QAA8B,eAA9B;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAC9BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AAEDD,EAAAA,mBAAmB,GAAG,CAClB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWC,YAAX,CAAwB,MAAxB,CAAZ;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWE,YAAX,CAAwB,MAAxB,CAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,YAD7B;AAEI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,eAFxB;AAGI,MAAA,mBAAmB,EAAE,KAAKP,mBAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,gBAAD;AAAkB,MAAA,SAAS,EAAE,KAAKG,KAAL,CAAWK,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAWH;;AAxB6B;;AA2BlC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7BZ,EAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACA,SAAO;AACHF,IAAAA,SAAS,EAAEE,KAAK,CAACC,MAAN,CAAaH,SADrB;AAEHF,IAAAA,YAAY,EAAEI,KAAK,CAACC,MAAN,CAAaL,YAFxB;AAGHC,IAAAA,eAAe,EAAEG,KAAK,CAACC,MAAN,CAAaJ;AAH3B,GAAP;AAKH,CAPD;;AASA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AAAA,QAC3BT,YAD2B,GACIV,aADJ,CAC3BU,YAD2B;AAAA,QACbC,YADa,GACIX,aADJ,CACbW,YADa;AAEnC,SAAOf,kBAAkB,CAAC;AAACc,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAD,EAA+BQ,QAA/B,CAAzB;AACH,CAHD;;AAKAlB,GAAG,CAACmB,SAAJ,GAAgB;AACZN,EAAAA,SAAS,EAAEpB,SAAS,CAAC2B,IAAV,CAAeC,UADd;AAEZV,EAAAA,YAAY,EAAElB,SAAS,CAAC2B,IAAV,CAAeC,UAFjB;AAGZT,EAAAA,eAAe,EAAEnB,SAAS,CAAC6B;AAHf,CAAhB;AAKA,eAAe5B,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,GAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport AppRouter from '../../routes';\r\nimport LoadingIndicator from '../../components/LoadingIndicator';\r\nimport SnackBar from '../../components/SnackBar';\r\nimport { commonActions } from '../../actions';\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        console.log('component mounted')\r\n        this.handleSnackBarClose = this.handleSnackBarClose.bind(this);\r\n    }\r\n\r\n    handleSnackBarClose() {\r\n        // this.props.hideSnackBar();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.showSnackBar('show'));\r\n        console.log(this.props.hideSnackBar('hide'));\r\n        return (\r\n            <div>\r\n                <SnackBar\r\n                    openSnackBar={this.props.openSnackBar}\r\n                    message={this.props.snackBarMessage}\r\n                    handleSnackBarClose={this.handleSnackBarClose}\r\n                />\r\n                <LoadingIndicator isLoading={this.props.isLoading} />\r\n                <AppRouter />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        isLoading: state.common.isLoading,\r\n        openSnackBar: state.common.openSnackBar,\r\n        snackBarMessage: state.common.snackBarMessage,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    const { showSnackBar, hideSnackBar } = commonActions;\r\n    return bindActionCreators({showSnackBar, hideSnackBar}, dispatch)\r\n};\r\n\r\nApp.propTypes = {\r\n    isLoading: PropTypes.bool.isRequired,\r\n    openSnackBar: PropTypes.bool.isRequired,\r\n    snackBarMessage: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}