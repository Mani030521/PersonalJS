{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M1047144\\\\Desktop\\\\Node\\\\React-ready\\\\react-ready\\\\src\\\\layouts\\\\Home\\\\Header\\\\Header.js\";\nimport React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport UserAccountMenu from '../../../components/UserAccountMenu';\nimport { authGuard } from '../../../utils';\nconst LinkMaterial = React.forwardRef((props, ref) => React.createElement(RouterLink, Object.assign({\n  innerRef: ref\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n})));\nconst sections = ['Header1', 'Header2', 'Header3'];\n\nconst Header = props => {\n  const classes = props.classes;\n  return React.createElement(React.Fragment, null, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    component: LinkMaterial,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"React-Ready\"), React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h5\",\n    color: \"inherit\",\n    align: \"center\",\n    noWrap: true,\n    className: classes.toolbarTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), authGuard.isAuthenticated() ? React.createElement(React.Fragment, null, React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    component: LinkMaterial,\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Dashbaord\"), React.createElement(UserAccountMenu, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))) : React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    component: LinkMaterial,\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Log in\")), React.createElement(Toolbar, {\n    component: \"nav\",\n    variant: \"dense\",\n    className: classes.toolbarSecondary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, sections.map(section => React.createElement(Link, {\n    color: \"inherit\",\n    noWrap: true,\n    key: section,\n    variant: \"body2\",\n    href: \"#\",\n    className: classes.toolbarLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, section))));\n};\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default Header;","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/layouts/Home/Header/Header.js"],"names":["React","Toolbar","IconButton","SearchIcon","Typography","Link","Button","RouterLink","PropTypes","UserAccountMenu","authGuard","LinkMaterial","forwardRef","props","ref","sections","Header","classes","toolbar","toolbarTitle","isAuthenticated","toolbarSecondary","map","section","toolbarLink","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport UserAccountMenu from '../../../components/UserAccountMenu';\r\nimport { authGuard } from '../../../utils';\r\n\r\nconst LinkMaterial = React.forwardRef((props, ref) => (\r\n    <RouterLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst sections = [\r\n    'Header1',\r\n    'Header2',\r\n    'Header3',\r\n];\r\n\r\nconst Header = props => {\r\n    const { classes } = props;\r\n    return (\r\n        <>\r\n            <Toolbar className={classes.toolbar}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    component={LinkMaterial}\r\n                    to=\"/\"\r\n                >\r\n                    React-Ready\r\n                </Button>\r\n\r\n                <Typography\r\n                    component=\"h2\"\r\n                    variant=\"h5\"\r\n                    color=\"inherit\"\r\n                    align=\"center\"\r\n                    noWrap\r\n                    className={classes.toolbarTitle}\r\n                ></Typography>\r\n                <IconButton>\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                {authGuard.isAuthenticated() ? (\r\n                    <>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            component={LinkMaterial}\r\n                            to=\"/dashboard\"\r\n                        >\r\n                            Dashbaord\r\n                        </Button>\r\n                        <UserAccountMenu {...props} />\r\n                    </>\r\n                ) : (\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        component={LinkMaterial}\r\n                        to=\"/login\"\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                )}\r\n            </Toolbar>\r\n            <Toolbar\r\n                component=\"nav\"\r\n                variant=\"dense\"\r\n                className={classes.toolbarSecondary}\r\n            >\r\n                {sections.map(section => (\r\n                    <Link\r\n                        color=\"inherit\"\r\n                        noWrap\r\n                        key={section}\r\n                        variant=\"body2\"\r\n                        href=\"#\"\r\n                        className={classes.toolbarLink}\r\n                    >\r\n                        {section}\r\n                    </Link>\r\n                ))}\r\n            </Toolbar>\r\n        </>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}