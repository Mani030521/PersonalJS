{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\M1047144\\\\Desktop\\\\Node\\\\React-ready\\\\react-ready\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\M1047144\\\\Desktop\\\\Node\\\\React-ready\\\\react-ready\\\\src\\\\components\\\\UserAccountMenu\\\\UserAccountMenu.js\";\nimport React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport PropTypes from 'prop-types';\n\nconst UserAccountMenu = props => {\n  const logout = props.logout;\n  const menuId = 'user-account-menu';\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n  const handleUserAccountMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const isMenuOpen = Boolean(anchorEl);\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    handleMenuClose();\n\n    if (logout) {\n      logout();\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"account of current user\",\n    \"aria-controls\": menuId,\n    \"aria-haspopup\": \"true\",\n    onClick: handleUserAccountMenuOpen,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(AccountCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    id: menuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: isMenuOpen,\n    onClose: handleMenuClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: handleMenuClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(MenuItem, {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Log out\")));\n};\n\nUserAccountMenu.propTypes = {\n  logout: PropTypes.func.isRequired\n};\nexport default UserAccountMenu;","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/components/UserAccountMenu/UserAccountMenu.js"],"names":["React","MenuItem","Menu","IconButton","AccountCircle","PropTypes","UserAccountMenu","props","logout","menuId","useState","anchorEl","setAnchorEl","handleUserAccountMenuOpen","event","currentTarget","isMenuOpen","Boolean","handleMenuClose","handleLogout","vertical","horizontal","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAA,QACrBC,MADqB,GACVD,KADU,CACrBC,MADqB;AAE7B,QAAMC,MAAM,GAAG,mBAAf;;AAF6B,0BAGGT,KAAK,CAACU,QAAN,CAAe,IAAf,CAHH;AAAA;AAAA,QAGtBC,QAHsB;AAAA,QAGZC,WAHY;;AAI7B,QAAMC,yBAAyB,GAAGC,KAAK,IAAI;AACvCF,IAAAA,WAAW,CAACE,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAGC,OAAO,CAACN,QAAD,CAA1B;;AACA,QAAMO,eAAe,GAAG,MAAM;AAC1BN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAGA,QAAMO,YAAY,GAAG,MAAM;AACvBD,IAAAA,eAAe;;AACf,QAAIV,MAAJ,EAAY;AACRA,MAAAA,MAAM;AACT;AACJ,GALD;;AAOA,SACI,0CACI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,kBAAW,yBAFf;AAGI,qBAAeC,MAHnB;AAII,qBAAc,MAJlB;AAKI,IAAA,OAAO,EAAEI,yBALb;AAMI,IAAA,KAAK,EAAC,SANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,EAWI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAEF,QADd;AAEI,IAAA,YAAY,EAAE;AAAES,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAFlB;AAGI,IAAA,EAAE,EAAEZ,MAHR;AAII,IAAA,WAAW,MAJf;AAKI,IAAA,eAAe,EAAE;AAAEW,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KALrB;AAMI,IAAA,IAAI,EAAEL,UANV;AAOI,IAAA,OAAO,EAAEE,eAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,EAUI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,CAXJ,CADJ;AA0BH,CA5CD;;AA8CAb,eAAe,CAACgB,SAAhB,GAA4B;AACxBd,EAAAA,MAAM,EAAEH,SAAS,CAACkB,IAAV,CAAeC;AADC,CAA5B;AAGA,eAAelB,eAAf","sourcesContent":["import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserAccountMenu = props => {\r\n    const { logout } = props;\r\n    const menuId = 'user-account-menu';\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleUserAccountMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleLogout = () => {\r\n        handleMenuClose();\r\n        if (logout) {\r\n            logout();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleUserAccountMenuOpen}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                id={menuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={isMenuOpen}\r\n                onClose={handleMenuClose}\r\n            >\r\n                <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleLogout}>Log out</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nUserAccountMenu.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n};\r\nexport default UserAccountMenu;\r\n"]},"metadata":{},"sourceType":"module"}