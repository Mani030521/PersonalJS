{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M1047144\\\\Desktop\\\\Node\\\\React-ready\\\\react-ready\\\\src\\\\components\\\\LoadingIndicator\\\\LoadingIndicator.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles(() => ({\n  progress: {\n    position: 'relative',\n    top: '40%',\n    left: '45%'\n  },\n  loader: {\n    position: 'absolute',\n    background: 'no-repeat center rgba(255, 255, 255, 0.8)',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    zIndex: 9999\n  }\n}));\n\nconst LoadingIndicator = props => {\n  const classes = useStyles();\n  const isLoading = props.isLoading;\n  return React.createElement(React.Fragment, null, isLoading ? React.createElement(\"div\", {\n    className: classes.loader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    size: 100,\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : null);\n};\n\nLoadingIndicator.propTypes = {\n  isLoading: PropTypes.bool.isRequired\n};\nexport default LoadingIndicator;","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/components/LoadingIndicator/LoadingIndicator.js"],"names":["React","CircularProgress","makeStyles","PropTypes","useStyles","progress","position","top","left","loader","background","right","bottom","zIndex","LoadingIndicator","props","classes","isLoading","propTypes","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC,OAAO;AAChCG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,GAAG,EAAE,KAFC;AAGNC,IAAAA,IAAI,EAAE;AAHA,GADsB;AAMhCC,EAAAA,MAAM,EAAE;AACJH,IAAAA,QAAQ,EAAE,UADN;AAEJI,IAAAA,UAAU,EAAE,2CAFR;AAGJH,IAAAA,GAAG,EAAE,CAHD;AAIJI,IAAAA,KAAK,EAAE,CAJH;AAKJC,IAAAA,MAAM,EAAE,CALJ;AAMJJ,IAAAA,IAAI,EAAE,CANF;AAOJK,IAAAA,MAAM,EAAE;AAPJ;AANwB,CAAP,CAAD,CAA5B;;AAgBA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAD8B,QAEtBa,SAFsB,GAERF,KAFQ,CAEtBE,SAFsB;AAG9B,SACI,0CACKA,SAAS,GACN;AAAK,IAAA,SAAS,EAAED,OAAO,CAACP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,GAAxB;AAA6B,IAAA,SAAS,EAAEO,OAAO,CAACX,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADM,GAIN,IALR,CADJ;AASH,CAZD;;AAcAS,gBAAgB,CAACI,SAAjB,GAA6B;AACzBD,EAAAA,SAAS,EAAEd,SAAS,CAACgB,IAAV,CAAeC;AADD,CAA7B;AAIA,eAAeN,gBAAf","sourcesContent":["import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    progress: {\r\n        position: 'relative',\r\n        top: '40%',\r\n        left: '45%',\r\n    },\r\n    loader: {\r\n        position: 'absolute',\r\n        background: 'no-repeat center rgba(255, 255, 255, 0.8)',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        zIndex: 9999,\r\n    },\r\n}));\r\nconst LoadingIndicator = props => {\r\n    const classes = useStyles();\r\n    const { isLoading } = props;\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <div className={classes.loader}>\r\n                    <CircularProgress size={100} className={classes.progress} />\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nLoadingIndicator.propTypes = {\r\n    isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default LoadingIndicator;\r\n"]},"metadata":{},"sourceType":"module"}