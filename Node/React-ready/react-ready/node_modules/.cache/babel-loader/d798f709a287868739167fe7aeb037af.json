{"ast":null,"code":"import * as types from './actionTypes';\nimport { httpClient } from '../utils';\nimport { showLoading } from './commonActions';\nexport function getOrders() {\n  return dispatch => {\n    dispatch(getOrdersPending());\n    dispatch(showLoading());\n    httpClient.get('5df64b99340000223de5a57a').then(response => {\n      return new Promise((res, rej) => {\n        if (response) {\n          res('sucess');\n          dispatch(hideLoading());\n          dispatch(getOrdersSuccess(response.result));\n        } else {\n          rej('error');\n        }\n      });\n    });\n  };\n}\n\nfunction getOrdersPending() {\n  return {\n    type: types.GET_DASHBOARD_ORDERS_REQUEST\n  };\n}\n\nfunction getOrdersSuccess(orders) {\n  return {\n    type: types.GET_DASHBOARD_ORDERS_SUCCESS,\n    payload: orders\n  };\n}","map":{"version":3,"sources":["C:/Users/M1047144/Desktop/Node/React-ready/react-ready/src/actions/dashboardActions.js"],"names":["types","httpClient","showLoading","getOrders","dispatch","getOrdersPending","get","then","response","Promise","res","rej","hideLoading","getOrdersSuccess","result","type","GET_DASHBOARD_ORDERS_REQUEST","orders","GET_DASHBOARD_ORDERS_SUCCESS","payload"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AACAD,IAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR;AACAD,IAAAA,UAAU,CAACK,GAAX,CAAe,0BAAf,EAA2CC,IAA3C,CAAgDC,QAAQ,IAAI;AACxD,aAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B,YAAGH,QAAH,EAAY;AACRE,UAAAA,GAAG,CAAC,QAAD,CAAH;AACAN,UAAAA,QAAQ,CAACQ,WAAW,EAAZ,CAAR;AACAR,UAAAA,QAAQ,CAACS,gBAAgB,CAACL,QAAQ,CAACM,MAAV,CAAjB,CAAR;AACH,SAJD,MAIK;AACDH,UAAAA,GAAG,CAAC,OAAD,CAAH;AACH;AACJ,OARM,CAAP;AASH,KAVD;AAWH,GAdD;AAeH;;AACD,SAASN,gBAAT,GAA4B;AACxB,SAAO;AACHU,IAAAA,IAAI,EAAEf,KAAK,CAACgB;AADT,GAAP;AAGH;;AAED,SAASH,gBAAT,CAA0BI,MAA1B,EAAkC;AAC9B,SAAO;AACHF,IAAAA,IAAI,EAAEf,KAAK,CAACkB,4BADT;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH","sourcesContent":["import * as types from './actionTypes';\r\nimport { httpClient } from '../utils';\r\nimport { showLoading } from './commonActions';\r\n\r\nexport function getOrders() {\r\n    return dispatch => {\r\n        dispatch(getOrdersPending());\r\n        dispatch(showLoading());\r\n        httpClient.get('5df64b99340000223de5a57a').then(response => {\r\n            return new Promise((res, rej) => {\r\n                if(response){\r\n                    res('sucess');\r\n                    dispatch(hideLoading())\r\n                    dispatch(getOrdersSuccess(response.result));\r\n                }else{\r\n                    rej('error');\r\n                }\r\n            })\r\n        });\r\n    };\r\n}\r\nfunction getOrdersPending() {\r\n    return {\r\n        type: types.GET_DASHBOARD_ORDERS_REQUEST,\r\n    };\r\n}\r\n\r\nfunction getOrdersSuccess(orders) {\r\n    return {\r\n        type: types.GET_DASHBOARD_ORDERS_SUCCESS,\r\n        payload: orders,\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}